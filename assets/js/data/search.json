[ { "title": "Eigene PKI mit dem Tool XCA", "url": "/posts/pki-mit-xca/", "categories": "Homelab, Security, SSL, Zertifikate", "tags": "xca, pki, ssl, security", "date": "2022-07-19 13:00:00 +0200", "snippet": "Für die Erstellung einer eigenen PKI (Publik Key Infrastructure) wird die Anwendung XCA auf der Herstellerseite heruntergeladen und installiert. Diese Anwendung XCA ist für die Erstellung und Verwaltung von X.509-Zertifikaten, Zertifikatsanträgen, privaten RSA-, DSA- und EC-Schlüsseln, Smartcards und CRLs vorgesehen. Alle CAs können rekursiv Sub-CAs signieren. Diese Zertifikatsketten werden übersichtlich dargestellt. Für einen einfachen unternehmensweiten Einsatz gibt es anpassbare Vorlagen, die für die Zertifikats- oder Request-Erstellung verwendet werden können.Hinweise zum Aufbau einer UnternehmensstrukturIn einem Unternehmen werden häufig eine Root CA und entsprechende Sub CAs erstellt, welche dann Server und auch Client-Zertifikate ausstellen und signieren können.Der Aufbau einer solchen Struktur kann mit XCA ebenfalls abgebildet werden. XCA kann wie folgt verwendet werden.Ein korrekter Aufbau ist deshalb notwendig, um die sog. Chain of Trust sicherzustellen, also die Vertrauenswürdigkeit der gesamten Zertifikatskette von Server-Zertifikat bis zurück zum Root Zertifikat. Der Aufbau und das Signing wird im folgenden Bild beschrieben (https://en.wikipedia.org/wiki/Chain_of_trust#/media/File:Chain_Of_Trust.svg)Erstellung der Root CAUm eine solche Struktur einzurichten beginnen wir in XCA mit dem erstellen einer Root CA. Dazu wird die Anwendung zunächst geöffnet und eine neue Datenbank erstellt. (Datei → Neue Datenbank)Die Datenbank sollte mit einem sicheren Passwort versehen werden, sodass der unbefugte Zugriff ausgeschlossen ist.Erstellen des Root ZertifikatsUm das Root Zertifikat zu erstellen wird im Tab Zertifikate über die Schaltfläche Neues Zertifikat ein neues Zertifikat generiert.Im Dialog wählt man hier zuerst die Default Vorlage für eine CA aus und klickt auf Alles übernehmen. Damit werden die Standart-Settings für ein Root CA Zertifikat gesetzt.Mit dem Wechsel auf den Tab Inhaber kommt man zu den weiteren Einstellungen im Zertifikat. Hier sollten alle Felder wie im unten stehenden Screenshot ausgefüllt werden. Wichtig hierbei ist vor allem der Common Name. Dieser enthält den FQDN (Fully Qualified Domain Name) des Servers. In diesem Fall haben wir diesen Namen jedoch noch nicht und tragen daher den Namen der Root CA ein. Bevor man weiter zum nächsten Tab wechselt wird noch ein neuer Key für die CA erstellt. Dieser sollte 4096 Bit lang sein.Der Tab Erweiterungen kann so belassen werden. Jedoch sollte man sich hier über die Zeitspanne der Gültigkeit des Zertifikats Gedanken machen. Hier sind default 10 Jahre eingetragen. In der Regel sind Root CAs jedoch 15-30 Jahre gültig, da ein schneller Wechsel von Root Zertifikaten kaum, oder nur mit großem Aufwand möglich ist. Daher sollte der Wert etwas angepasst / angehoben werden. Der Zeitraum wird erst mit dem Klick auf Übernehmen auch wirklich übernommen.Alle weiteren Tabs sind bereits richtig vorkonfiguriert und müssen nicht weiter bearbeitet werden. Mit dem abschließenden Klick auf OK wird das Zertifikat ausgestellt und ist ab dann gültig.Erstellung einer Sub CA - Intermediate CertificateEin Intermediate Certificate, oder auch Zwischenzertifikat, wird dazu verwendet, um dann später Webserver- oder Client-Zertifikate auszustellen. Das Zertifikat der SubCA wird von der Root CA unterschrieben. Der Vorgang der Ausstellung ist also sehr ähnlich, weswegen hier das Root CA als Vorlage dienen kann.Erstellen des Sub ZertifikatsÜber einen einfachen Rechtsklick auf das Root Zertifikat, kann ein neues, ähnliches Zertifikat generiert werden.Es öffnet sich anschließend wieder der Ausstellungsdialog. Dort wählt man nun zunächst die Root CA als unterschreibende Zertifizierungsstelle aus und wechselt dann zum Tab Inhaber. Eine Vorlage muss nicht angewendet werden, da wir das Root Zertifikat bereits als Vorlage verwenden.Im Inhaber Tab wird dann noch der Interne und der Common Name angepasst. Hier bietet es sich an, die Sub CA eventuell direkt zu spezifizieren und eine Versionsnummer mit anzugeben. Auch hier ist es wichtig, wieder einen neuen Schlüssel mit 4096 Bit zu generieren.Im Tab Erweiterungen muss die Gültigkeitsdauer ebenfalls entsprechend geändert werden. Es empfiehlt sich, hier einen kleineren Zeitraum als den von der Root CA zu verwenden. In der Regel die Halbe Zeit der Root CA.Mit Übernehmen und OK wird auch dieses Zertifikat erstellt und ist nun in der Liste sichtbar. Deutlich wird hier bereits, dass eine Zertifikatskette entstanden ist, welche aufeinander aufbaut.Erstellen von Server ZertifikatenNach der Erstellung der Root und Sub CA, können nun entsprechende Server Zertifikate ausgestellt werden. Diese dienen für den Browser dann zur verschlüsselten Verbindung zwischen User und Server.Die Erstellung solcher Zertifikate ist ebenso einfach wie auch für die CA Zertifikate. Lediglich die Vorlage für die Ausstellung ist eine andere.Im vorangegangenen Screenshot wird entsprechend TLS_Server als Vorlage übernommen und die Sub CA als unterschreibende CA ausgewählt. Der Inhaber Tab ist ähnlich auszufüllen wie bei den CA Zertifikaten.Besonders wichtig sind hier jedoch der Interne und auch der Common Name. Im CN MUSS der FQDN stehen. Der Interne Name ist frei wählbar, sollte jedoch auf den Hostname des Servers verweisen. Bei der Erstellung des Keys für dieses Zertifikat ist eine 2048 Bit Keylänge ausreichend.Im Tab Erweitert werden neben dem Gültigkeitszeitraum auch noch weitere Settings gemacht. Unter Subject Alternative Name sollten mindestens drei Einträge stehen. Zum einen der FQDN (dieser wird durch den bereits vorhandenen Eintrag automatisch befüllt), sowie der Hostname (DNS:hostname) und eine IP (IP:10.10.10.20).Nach diesem Schritt kann auch hier wieder mit OK das Zertifikat entsprechend erstellt werden.FazitDie Einrichtung und Konfiguration einer eigenen PKI mit dem Tool XCA ist sehr einfach und übersichtlich. Alle Zertifikate und Keys werden sicher in einer Datenbank aufbewahrt und sind mit einem Passwort geschützt. Wer sich ganz Sicher sein will, dass die Root CA nicht kompromittiert wird, erstellt jeweils für die Root CA und für die Sub CA eine eigene Datenbank und bewahrt diese getrennt voneinander und mit verschiedenen Kennwörtern auf.Die Einrichtung von Getrennten CAs ist nicht merklich schwieriger. Hier wird nur nach dem Erstellen der Sub CA selbige mit den entsprechenden Zertifikats- und Key-Files als PKCS12 (.pfx-File) Exportiert und eine neue Datenbank erstellt. Anschließend wird die CA hier wieder importiert und kann dann verwendet werden um Server- oder Client-Zertifikate zu unterschreiben.Zertifikate und Keyfiles lassen sich sehr einfach Exportieren und können so auf Webservern einfach wieder als File importiert werden." }, { "title": "Korruptes Filesystem mit fsck reparieren", "url": "/posts/fsck/", "categories": "Homelab, Linux", "tags": "fsck, filesystem, linux", "date": "2022-06-20 19:02:00 +0200", "snippet": "Gelegentlich kann es vorkommen, dass auf Festplatten Blöcke korrupt werden und das File System in einen Read Only Zustand gerät. Wie man solche korrupten Blöcke wieder “repariert” wird im Folgenden beschrieben. Diese Dokumentation bezieht sich auf Linux Betriebssysteme.fsck des FilesystemsSollte das Filesystem korrupt sein, ist ein Reboot der Maschine angebracht. Dieser führt dazu, dass das System in das initramfs oder eine Art Recovery Mode bootet. initramfs RecoveryHier hat man nun die Möglichkeit, Befehle zum Check des Filesystems auszuführen. Außerdem wird direkt angezeigt, welches Filesystem einen manuellen Check benötigt. (siehe Screenshot → The root filesystem on /dev/sda3 requires a manual fsck)Zunächst wird hier also der fsck ausgeführt. fsck /dev/sda3 fsck des FilesystemsHier wird man gefragt, ob man das betreffende Problem “fixen” möchte. Dies bestätigt man einfach mit Enter und das Filesystem wird entsprechend repariert. Fix corrupted filesystemZunächst werden orphand inodes repariert. Anschließend wird man gefragt, ob auch block bitmap differences reparieren möchte. Hier wird wieder mit Enter bestätigt. Diese Schritte müssen dann mehrfach bestätigt werden. Am Schluss wird angezeigt, dass das Filesystem modified wurde und nun kann per exit Befehl einfach neugestartet werden. Filesystem modified -&amp;gt; exit to reboot" }, { "title": "Postfix Mailforwarder unter Linux einrichten", "url": "/posts/postfix-mailforwarder/", "categories": "Homelab, Linux", "tags": "postfix, mailforwarder, mail, linux, smtp", "date": "2022-06-09 17:30:00 +0200", "snippet": "Postfix MailforwarderIn diesem Artikel wird Postfix so konfiguriert, dass es E-Mails über einen externen SMTP-Server weiterleitet. Der Vorteil daran ist, dass man seinen Mailserver nicht selbst auf dem System hosten muss, sondern Mails über einen externen Mailserver (z.B. web.de, gmx.de, etc.) versendet.Da das Versenden von E-Mails über Postifx aufgrund der Spam-Filter und der von den E-Mail-Anbietern in den letzten Jahren eingeführten Beschränkungen immer schwieriger geworden ist, wird empfohlen alle Postfix/PHP mail()-E-Mails über einen externen, vertrauenswürdigen E-Mail-Anbieter weiterzuleiten, um die Zustellung zu gewährleisten.VorbereitungEs wird die Adresse und der Port des SMTP-Servers sowie der Benutzernamen und das Kennwort für das E-Mail-Konto benötigt. \\n Der SMTP-Port sollte 587 sein, kann aber je nach Ihrem Host unterschiedlich sein.InstallationZu Installation von Postfix werden zunächst einige Pakete benötigt, die sich mit den untenstehenden Befehlen installieren lassen. in den mailutils befindet sich unter anderem auch das Postfix Paket, um das es hier geht.sudo apt-get updatesudo apt install -y mailutilsWährend der Installation von Postfix wird auch die Grundkonfiguration vorgenommen. Diese sollte bei einem externen Mailserver, wie in diesem Beispiel, wie auf dem Bild zu sehen, eingestellt werden. Postfix ConfigurationInternet Site auswählenHier wählt man Internet Site aus, da die Mails ja zu einem Mailserver im Internet transferiert werden. Eingabe des MailserversNach der Eingabe der FQDN, ist die Grundinstallation abgeschlossen.Konfiguration von PostfixZunächst muss in der Postfix main.cf Datei eine Anpssung gemacht werden.In der Datei stehen zu Beginn schon einige Konfigurationen. Scrollt man ganz nach unten gibt es hier den Eintrag relayhost= - dieser muss entfernt werden.Anschließend fügt man ganz am Ende der Datei folgenden Codeschnipsel ein. Dabei muss bei relayhost= zwischen den eckigen Klammern die passende Mailserver Domain eingesetzt werden. (Bsp.: [smtp.example.com]).relayhost = [smtp.example.com]:587smtp_sasl_auth_enable = yessmtp_sasl_password_maps = hash:/etc/postfix/sasl_passwdsmtp_sasl_security_options = noanonymoussmtp_tls_CAfile = /etc/postfix/cacert.pemsmtp_use_tls = yesAnschließend wird die Datei mit CTRL + X und yes gespeichert.Erstellen von Passwort und DB DateiAls Erstes muss eine Datei erstellt werden, welche die Anmeldedaten vom Mailserver / Postfach beinhaltet.sudo nano /etc/postfix/sasl_passwdIn diese datei wird folgendes eingefügt (Auch hier muss der richtige Mailserver eingesetzt werden und username:password durch E-Mailadresse und Passwort ersetzt werden:[smtp.example.com]:587 username:passwordMit dem postmap Befehl auf die eben erstellte Datei, wird die Hash Datenbank erstellt.sudo postmap /etc/postfix/sasl_passwdIm /etc/postfix/ Verzeichnis liegt nun die Credential-DB mit den Hash-Werten. Diese werden anschließend mit den folgenden zwei Befehlen angepasst.sudo chown root:root /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.dbsudo chmod 0600 /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.dbGenerierung von ZertifikatenZum Forwarden von Mails muss ein Zertifikat generiert werden. Auch dieses liegt später im /etc/postfix/ Verzeichnis.cat /etc/ssl/certs/thawte_Primary_Root_CA.pem | sudo tee -a /etc/postfix/cacert.pemTestmail sendenIst Postfix richtig konfiguriert, kann man den E-Mail Versand auch testen.echo &quot;Test Email message body&quot; | mail -s &quot;Email test subject&quot; test@example.comAußerdem ist es möglich Troubleshooting zu betreiben, wenn Mails nicht entsprechend ankommen.Hierzu werden die folgenden Befehle verwendet.sudo tail /var/log/mail.logsudo tail -f -n 50 /var/log/syslog | grep postfix" }, { "title": "Willkommen auf auf docs.cloud-h.eu", "url": "/posts/cloud-h-docs/", "categories": "Homelab", "tags": "", "date": "2022-06-09 17:00:00 +0200", "snippet": "Herzlich Willkommen auf docs.cloud-h.eu - der Seite für alle Home Lab Enthusiasten, die neue Dinge lernen und ausprobieren wollen.Hier werden unregelmäßig neue Posts zu verschiedenen Themen rund um Virtualisierung und Containerizsation mit Docker erscheinen.Schau gerne ab und zu vorbei. natürlich kannst du gerne unter den Posts auch Kommentare da lassen und mit anderen in den Austausch gehen.Bis Bald ;)" } ]
